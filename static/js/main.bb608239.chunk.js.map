{"version":3,"sources":["components/square.js","components/board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","square","className","Board","squares","map","i","key","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","x0","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"4NAYeA,EATA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjBC,EAASF,EAAK,kBAAcA,GAAd,UACpB,OACE,4BAAQG,UAAWD,EAAQD,QAASA,GACjCD,ICOQI,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OACZ,6BACE,8DACA,yBAAKE,UAAU,SACZE,EAAQC,KAAI,SAACJ,EAAQK,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAGP,MAAOE,EAAQD,QAAS,kBAAMA,EAAQM,YCuC/CE,EA3CF,WAAO,IAAD,EACaC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADrC,mBACVC,EADU,KACDC,EADC,OAEmBJ,mBAAS,GAF5B,mBAEVK,EAFU,KAEEC,EAFF,OAGaN,oBAAS,GAHtB,mBAGVO,EAHU,KAGDC,EAHC,KAIXC,ECRD,SAAyBd,GAW9B,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IAyB3B,OACE,yBAAKd,UAAU,QACb,kBAAC,EAAD,CAAOE,QAASQ,EAAQE,GAAad,QAzBrB,SAACM,GACnB,IAAMoB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAChBV,GAAUd,EAAQE,KACtBF,EAAQE,GAAKmB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAkBV,yBAAKd,UAAU,gBACb,6BACE,uCAbNU,EAAQP,KAAI,SAACwB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACE,wBAAIvB,IAAKuB,GACP,4BAAQ9B,QAAS,kBARvBe,EADciB,EASsBF,QAPpCb,EAAWe,EAAO,IAAM,GAFX,IAACA,IAS8BD,QAYxC,4BAAKb,EAAS,WAAaA,EAAS,gBAAkBO,MErC9DQ,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.bb608239.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./square.css\";\n\nconst Square = ({ value, onClick }) => {\n  const square = value ? `squares ${value}` : `squares`;\n  return (\n    <button className={square} onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./square\";\n\nconst Board = ({ squares, onClick }) => (\n  <div>\n    <h1>React Tic Tac Toe - With Hooks</h1>\n    <div className=\"board\">\n      {squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => onClick(i)} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./board\";\n\nconst Game = () => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n  const x0 = xIsNext ? \"X\" : \"O\";\n\n  const handleClick = (i) => {\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    if (winner || squares[i]) return;\n    squares[i] = x0;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n  const renderMoves = () =>\n    history.map((_step, move) => {\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{destination}</button>\n        </li>\n      );\n    });\n  return (\n    <div className=\"main\">\n      <Board squares={history[stepNumber]} onClick={handleClick} />\n      <div className=\"info-wrapper\">\n        <div>\n          <h3>History</h3>\n          {renderMoves()}\n        </div>\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + x0}</h3>\n      </div>\n    </div>\n  );\n};\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}